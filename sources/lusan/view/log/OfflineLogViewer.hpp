#ifndef LUSAN_VIEW_LOG_OFFLINELOGVIEWER_HPP
#define LUSAN_VIEW_LOG_OFFLINELOGVIEWER_HPP
/************************************************************************
 *  This file is part of the Lusan project, an official component of the AREG SDK.
 *  Lusan is a graphical user interface (GUI) tool designed to support the development,
 *  debugging, and testing of applications built with the AREG Framework.
 *
 *  Lusan is available as free and open-source software under the MIT License,
 *  providing essential features for developers.
 *
 *  For detailed licensing terms, please refer to the LICENSE.txt file included
 *  with this distribution or contact us at info[at]aregtech.com.
 *
 *  \copyright   © 2023-2024 Aregtech UG. All rights reserved.
 *  \file        lusan/view/log/OfflineLogViewer.hpp
 *  \ingroup     Lusan - GUI Tool for AREG SDK
 *  \author      Artak Avetyan
 *  \brief       Lusan application, offline log viewer widget.
 *
 ************************************************************************/

#include "lusan/view/log/LogViewerBase.hpp"
#include "lusan/model/log/LogSearchModel.hpp"

/************************************************************************
 * Dependencies
 ************************************************************************/
class QLabel;
class QWidget;
class LiveLogViewer;
class MdiMainWindow;

namespace Ui {
    class OfflineLogViewer;
}

/**
 * \brief   Offline log viewer MDI window for viewing log files (.sqlog)
 **/
class OfflineLogViewer : public LogViewerBase
{
    Q_OBJECT

//////////////////////////////////////////////////////////////////////////
// Constructor
//////////////////////////////////////////////////////////////////////////
public:

    /**
     * \brief   Constructor.
     * \param   wndMain    The main window of the application.
     * \param   parent     The parent widget.
     **/
    explicit OfflineLogViewer(MdiMainWindow *wndMain, QWidget *parent = nullptr);

    /**
     * \brief   Constructor to use to make a copy of data from the live log viewer.
     * \param   wndMain    The main window of the application.
     * \param   liveLogs   The live log viewer object to copy data from.
     * \param   parent     The parent widget.
     **/
    explicit OfflineLogViewer(MdiMainWindow* wndMain, LiveLogViewer & liveLogs, QWidget* parent = nullptr);

    virtual ~OfflineLogViewer(void);

/************************************************************************
 * MdiChild overrides
 ************************************************************************/
protected:

    /**
     * \brief   Called when the MDI child window is closed.
     * \param   isActive    Indicates whether the window is active or not.
     **/
    virtual void onWindowClosing(bool isActive) override;

    /**
     * \brief   Called when the MDI child window is activated.
     *          This method can be overridden to handle window activation events.
     **/
    virtual void onWindowActivated(void) override;

//////////////////////////////////////////////////////////////////////////
// Slots.
//////////////////////////////////////////////////////////////////////////
private slots:

    /**
     * \brief   Slot, triggered when database is successfully opened.
     **/
    void onDatabaseOpened(const QString& dbPath);

    /**
     * \brief   Slot, triggered when database is closed.
     **/
    void onDatabaseClosed(const QString& dbPath);
    
private:
    //!< Returns Logging File name label widget.
    QLabel* ctrlFile(void);
    
    /**
     * \brief   Sets up or clears the offline log viewer signals.
     * \param   doSetup     If true, sets up the signals. Otherwise, clears the signal.
     **/
    void setupSignals(bool doSetup);

    /**
     * \brief   Cleans up resources used by the offline log viewer.
     *          This method is called when the viewer is closed or no longer needed.
     **/
    void cleanResources(void);
    
//////////////////////////////////////////////////////////////////////////
// Member variables
//////////////////////////////////////////////////////////////////////////
private:
    Ui::OfflineLogViewer*       ui;         //!< User interface object, generated by Qt Designer.
};

#endif // LUSAN_VIEW_LOG_OFFLINELOGVIEWER_HPP
